<?xml version="1.0" encoding="UTF-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" version="2.0">
  <channel>
    <title>Tom Dalling</title>
    <link>https://www.tomdalling.com/?utm_source=rss&amp;utm_medium=rss</link>
    <atom:link href="https://www.tomdalling.com/blog/feed/" rel="self" type="application/rss+xml"/>
    <description>Web &amp; software developer</description>
    <language>en</language>
    <generator>Tom Dalling's fingertips</generator>
    <sy:updatePeriod>daily</sy:updatePeriod>
    <sy:updateFrequency>1</sy:updateFrequency>
    <item>
      <title>Monologue On End-To-End Testing</title>
      <link>https://www.tomdalling.com/blog/testing/monologue-on-end-to-end-testing/?utm_source=rss&amp;utm_medium=rss</link>
      <description><![CDATA[<p>I wanted to write down some of my thoughts on end-to-end testing,
mainly to help clarify my own thinking.</p>
]]></description>
      <pubDate>Mon, 31 May 2021 00:00:00 -0000</pubDate>
      <category><![CDATA[Testing]]></category>
      <guid isPermaLink="false">com.tomdalling.blog.monologue-on-end-to-end-testing</guid>
    </item>
    <item>
      <title>Write Detailed RSpec Example Descriptions</title>
      <link>https://www.tomdalling.com/blog/mentoring/write-detailed-rspec-example-descriptions/?utm_source=rss&amp;utm_medium=rss</link>
      <description><![CDATA[<h2>Rule Of Thumb</h2>

<p>RSpec examples should have enough detail in the descriptions to
rewrite them from scratch.</p>
]]></description>
      <pubDate>Mon, 17 May 2021 00:00:00 -0000</pubDate>
      <category><![CDATA[Mentoring Notes]]></category>
      <guid isPermaLink="false">com.tomdalling.blog.write-detailed-rspec-example-descriptions</guid>
    </item>
    <item>
      <title>Start With High-Level Tests</title>
      <link>https://www.tomdalling.com/blog/mentoring/start-with-high-level-tests/?utm_source=rss&amp;utm_medium=rss</link>
      <description><![CDATA[<h2>Rule Of Thumb</h2>

<p>Start with high-level tests, and step down to lower levels when the
implementation is stable.</p>
]]></description>
      <pubDate>Mon, 10 May 2021 00:00:00 -0000</pubDate>
      <category><![CDATA[Mentoring Notes]]></category>
      <guid isPermaLink="false">com.tomdalling.blog.start-with-high-level-tests</guid>
    </item>
    <item>
      <title>The Tip Of The Inputberg</title>
      <link>https://www.tomdalling.com/blog/testing/the-tip-of-the-inputberg/?utm_source=rss&amp;utm_medium=rss</link>
      <description><![CDATA[<p>Why did Apple not test what happens when a user supplies “True” as
their last name? Is it incompetence?</p>

<figure class="naked">
  <blockquote class="twitter-tweet">
    <a href="https://twitter.com/JPaulGibson/status/1368182852668583948">https://twitter.com/JPaulGibson/status/1368182852668583948</a>
  </blockquote>
</figure>


<p>I don’t think so. I think the explanation is simpler: it’s not
feasible. It’s highly impractical, if not computationally impossible,
to test every input.</p>
]]></description>
      <pubDate>Mon, 08 Mar 2021 00:00:00 -0000</pubDate>
      <category><![CDATA[Testing]]></category>
      <guid isPermaLink="false">com.tomdalling.blog.the-tip-of-the-inputberg</guid>
    </item>
    <item>
      <title>Better User Stories</title>
      <link>https://www.tomdalling.com/blog/software-processes/better-user-stories/?utm_source=rss&amp;utm_medium=rss</link>
      <description><![CDATA[<p>As a member of the software industry, I want user stories to focus
more on the problem definition, so that we can make better choices
around how to implement a solution.</p>

<p>Or should I say:</p>

<p>As a member of the software industry, it’s easy to decide on a
solution or implementation details too quickly, without a good
understanding of the problem we are trying to solve. This leads to
suboptimal software for the end user, technical debt, and rework that
could have been avoided. I propose that we change the user story
format to focus more on the problem definition, and less on a single
solution.</p>
]]></description>
      <pubDate>Mon, 07 Dec 2020 00:00:00 -0000</pubDate>
      <category><![CDATA[Software Processes]]></category>
      <guid isPermaLink="false">com.tomdalling.blog.better-user-stories</guid>
    </item>
    <item>
      <title>Consistent Hammer Man</title>
      <link>https://www.tomdalling.com/blog/software-design/consistent-hammer-man/?utm_source=rss&amp;utm_medium=rss</link>
      <description><![CDATA[<p>This is a short parable I came up while discussing linters, in
response to someone asking if I think it’s good to be inconsistent.</p>
]]></description>
      <pubDate>Sat, 21 Nov 2020 00:00:00 -0000</pubDate>
      <category><![CDATA[Software Design]]></category>
      <guid isPermaLink="false">com.tomdalling.blog.consistent-hammer-man</guid>
    </item>
    <item>
      <title>What Is The Purpose Of Private?</title>
      <link>https://www.tomdalling.com/blog/software-design/what-is-the-purpose-of-private/?utm_source=rss&amp;utm_medium=rss</link>
      <description><![CDATA[<p>Why use <code>private</code> at all? What is the benefit of trying to stop other
people from using code that works perfectly well? It’s to reduce
future maintenance costs by discouraging coupling to unstable
dependencies.</p>
]]></description>
      <pubDate>Mon, 09 Nov 2020 00:00:00 -0000</pubDate>
      <category><![CDATA[Software Design]]></category>
      <guid isPermaLink="false">com.tomdalling.blog.what-is-the-purpose-of-private</guid>
    </item>
    <item>
      <title>Bleeting For Fun And Profit</title>
      <link>https://www.tomdalling.com/blog/random-stuff/bleeting-for-fun-and-profit/?utm_source=rss&amp;utm_medium=rss</link>
      <description><![CDATA[<p>Today I want to coin the term <em>bleet</em>. It’s a type of short-form
writing somewhere between a blog post and a tweet.</p>
]]></description>
      <pubDate>Sat, 31 Oct 2020 00:00:00 -0000</pubDate>
      <category><![CDATA[Miscellaneous]]></category>
      <guid isPermaLink="false">com.tomdalling.blog.bleeting-for-fun-and-profit</guid>
    </item>
    <item>
      <title>What's Stopping You From Coding Like This?</title>
      <link>https://www.tomdalling.com/blog/random-stuff/whats-stopping-you-from-coding-like-this/?utm_source=rss&amp;utm_medium=rss</link>
      <description><![CDATA[<p>I made a <a href="https://gist.github.com/tomdalling/2540a1c785d51da2bf0d57164bd26d96">quick-and-dirty Ruby script</a> that animates the <a href="https://docs.github.com/en/github/setting-up-and-managing-your-github-profile/viewing-contributions-on-your-profile#contributions-calendar">GitHub
contributions calendar</a>, for the express purpose of making this
satirical video:</p>

<figure class="youtube">
  <iframe src="https://www.youtube.com/embed/5wbtCyZTbTU" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
</figure>
]]></description>
      <pubDate>Wed, 23 Sep 2020 00:00:00 -0000</pubDate>
      <category><![CDATA[Miscellaneous]]></category>
      <guid isPermaLink="false">com.tomdalling.blog.whats-stopping-you-from-coding-like-this</guid>
    </item>
    <item>
      <title>The Pure Function As An Object (PFAAO) Ruby Pattern</title>
      <link>https://www.tomdalling.com/blog/ruby/pure-function-as-an-object-PFAAO-pattern/?utm_source=rss&amp;utm_medium=rss</link>
      <description><![CDATA[<p>In this article, I want to demonstrate a nice way to write functional-style code in Ruby.
It is a way to write non-trivial pure functions, without a bunch of weird non-idiomatic code.
Also, the acronym is PFAAO, which I think sounds pretty cool.</p>
]]></description>
      <pubDate>Fri, 12 Feb 2016 00:00:00 -0000</pubDate>
      <category><![CDATA[Ruby]]></category>
      <guid isPermaLink="false">com.tomdalling.blog.pure-function-as-an-object</guid>
    </item>
  </channel>
</rss>
