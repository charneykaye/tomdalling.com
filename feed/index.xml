<?xml version="1.0" encoding="UTF-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" version="2.0">
  <channel>
    <title>Tom Dalling</title>
    <link>https://www.tomdalling.com/?utm_source=rss&amp;utm_medium=rss</link>
    <atom:link href="https://www.tomdalling.com/blog/feed/" rel="self" type="application/rss+xml"/>
    <description>Web &amp; software developer</description>
    <language>en</language>
    <generator>Tom Dalling's fingertips</generator>
    <sy:updatePeriod>daily</sy:updatePeriod>
    <sy:updateFrequency>1</sy:updateFrequency>
    <item>
      <title>Better User Stories</title>
      <link>https://www.tomdalling.com/blog/software-processes/better-user-stories/?utm_source=rss&amp;utm_medium=rss</link>
      <description><![CDATA[<p>As a member of the software industry, I want user stories to focus
more on the problem definition, so that we can make better choices
around how to implement a solution.</p>

<p>Or should I say:</p>

<p>As a member of the software industry, it’s easy to decide on a
solution or implementation details too quickly, without a good
understanding of the problem we are trying to solve. This leads to
suboptimal software for the end user, technical debt, and rework that
could have been avoided. I propose that we change the user story
format to focus more on the problem definition, and less on a single
solution.</p>
]]></description>
      <pubDate>Mon, 07 Dec 2020 00:00:00 -0000</pubDate>
      <category><![CDATA[Software Processes]]></category>
      <guid isPermaLink="false">com.tomdalling.blog.better-user-stories</guid>
    </item>
    <item>
      <title>Consistent Hammer Man</title>
      <link>https://www.tomdalling.com/blog/software-design/consistent-hammer-man/?utm_source=rss&amp;utm_medium=rss</link>
      <description><![CDATA[<p>This is a short parable I came up while discussing linters, in
response to someone asking if I think it’s good to be inconsistent.</p>
]]></description>
      <pubDate>Sat, 21 Nov 2020 00:00:00 -0000</pubDate>
      <category><![CDATA[Software Design]]></category>
      <guid isPermaLink="false">com.tomdalling.blog.consistent-hammer-man</guid>
    </item>
    <item>
      <title>What Is The Purpose Of Private?</title>
      <link>https://www.tomdalling.com/blog/software-design/what-is-the-purpose-of-private/?utm_source=rss&amp;utm_medium=rss</link>
      <description><![CDATA[<p>Why use <code>private</code> at all? What is the benefit of trying to stop other
people from using code that works perfectly well? It’s to reduce
future maintenance costs by discouraging coupling to unstable
dependencies.</p>
]]></description>
      <pubDate>Mon, 09 Nov 2020 00:00:00 -0000</pubDate>
      <category><![CDATA[Software Design]]></category>
      <guid isPermaLink="false">com.tomdalling.blog.what-is-the-purpose-of-private</guid>
    </item>
    <item>
      <title>Bleeting For Fun And Profit</title>
      <link>https://www.tomdalling.com/blog/random-stuff/bleeting-for-fun-and-profit/?utm_source=rss&amp;utm_medium=rss</link>
      <description><![CDATA[<p>Today I want to coin the term <em>bleet</em>. It’s a type of short-form
writing somewhere between a blog post and a tweet.</p>
]]></description>
      <pubDate>Sat, 31 Oct 2020 00:00:00 -0000</pubDate>
      <category><![CDATA[Miscellaneous]]></category>
      <guid isPermaLink="false">com.tomdalling.blog.bleeting-for-fun-and-profit</guid>
    </item>
    <item>
      <title>What's Stopping You From Coding Like This?</title>
      <link>https://www.tomdalling.com/blog/random-stuff/whats-stopping-you-from-coding-like-this/?utm_source=rss&amp;utm_medium=rss</link>
      <description><![CDATA[<p>I made a <a href="https://gist.github.com/tomdalling/2540a1c785d51da2bf0d57164bd26d96">quick-and-dirty Ruby script</a> that animates the <a href="https://docs.github.com/en/github/setting-up-and-managing-your-github-profile/viewing-contributions-on-your-profile#contributions-calendar">GitHub
contributions calendar</a>, for the express purpose of making this
satirical video:</p>

<figure class="youtube">
  <iframe src="https://www.youtube.com/embed/5wbtCyZTbTU" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
</figure>
]]></description>
      <pubDate>Wed, 23 Sep 2020 00:00:00 -0000</pubDate>
      <category><![CDATA[Miscellaneous]]></category>
      <guid isPermaLink="false">com.tomdalling.blog.whats-stopping-you-from-coding-like-this</guid>
    </item>
    <item>
      <title>The Pure Function As An Object (PFAAO) Ruby Pattern</title>
      <link>https://www.tomdalling.com/blog/ruby/pure-function-as-an-object-PFAAO-pattern/?utm_source=rss&amp;utm_medium=rss</link>
      <description><![CDATA[<p>In this article, I want to demonstrate a nice way to write functional-style code in Ruby.
It is a way to write non-trivial pure functions, without a bunch of weird non-idiomatic code.
Also, the acronym is PFAAO, which I think sounds pretty cool.</p>
]]></description>
      <pubDate>Fri, 12 Feb 2016 00:00:00 -0000</pubDate>
      <category><![CDATA[Ruby]]></category>
      <guid isPermaLink="false">com.tomdalling.blog.pure-function-as-an-object</guid>
    </item>
    <item>
      <title>FizzBuzz In Too Much Detail</title>
      <link>https://www.tomdalling.com/blog/software-design/fizzbuzz-in-too-much-detail/?utm_source=rss&amp;utm_medium=rss</link>
      <description><![CDATA[<p>I know. FizzBuzz has been done to death. But I want to use it as a familiar
base upon which we can explore some of the common tradeoffs involved in writing
and maintaining software. In this article, I’ll show multiple implementations
of FizzBuzz, all designed to achieve different goals, and discuss the
implications of each.</p>
]]></description>
      <pubDate>Sun, 26 Apr 2015 00:00:00 -0000</pubDate>
      <category><![CDATA[Software Design]]></category>
      <guid isPermaLink="false">com.tomdalling.blog.fizzbuzz</guid>
    </item>
    <item>
      <title>Making Fruity Bat (a Flappy Bird clone) in Ruby</title>
      <link>https://www.tomdalling.com/blog/ruby/fruity-bat-flappy-bird-clone-in-ruby/?utm_source=rss&amp;utm_medium=rss</link>
      <description><![CDATA[<p>Today I live-streamed the making of Fruity Bat (a Flappy Bird clone) in
Ruby using the <code>gosu</code> gem. Watch the videos below, and check out the code on
github: <a href="https://github.com/tomdalling/fruity_bat">https://github.com/tomdalling/fruity_bat</a></p>
]]></description>
      <pubDate>Sun, 22 Feb 2015 00:00:00 -0000</pubDate>
      <category><![CDATA[Ruby]]></category>
      <guid isPermaLink="false">com.tomdalling.blog.making-fruity-bat</guid>
    </item>
    <item>
      <title>Modern OpenGL 08 – Even More Lighting: Directional Lights, Spotlights, &amp; Multiple Lights</title>
      <link>https://www.tomdalling.com/blog/modern-opengl/08-even-more-lighting-directional-lights-spotlights-multiple-lights/?utm_source=rss&amp;utm_medium=rss</link>
      <description><![CDATA[<p>In this article, we will be adding directional lights, spotlights, and allowing
for multiple lights instead of just one. This is the final article on lighting
– at least for a while.</p>
]]></description>
      <pubDate>Sat, 01 Nov 2014 00:00:00 -0000</pubDate>
      <category><![CDATA[Modern OpenGL Series]]></category>
      <guid isPermaLink="false">com.tomdalling.modern-opengl-series.08</guid>
    </item>
    <item>
      <title>OpenGL in 2014</title>
      <link>https://www.tomdalling.com/blog/modern-opengl/opengl-in-2014/?utm_source=rss&amp;utm_medium=rss</link>
      <description><![CDATA[<p>Valve is investing in OpenGL to hedge themselves against Microsoft. Some
well-known developers have written about the deficiencies in the API. A few
competing, proprietary APIs have popped up. In an effort to remain competitive,
Khronos announces glnext: a ground-up rethinking of the OpenGL and OpenGL ES
APIs. This post will look at developments in the OpenGL ecosystem over the last
couple of years.</p>
]]></description>
      <pubDate>Sun, 21 Sep 2014 00:00:00 -0000</pubDate>
      <category><![CDATA[Modern OpenGL Series]]></category>
      <guid isPermaLink="false">com.tomdalling.blog.opengl-in-2014</guid>
    </item>
  </channel>
</rss>
